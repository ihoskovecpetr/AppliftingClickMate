{"version":3,"sources":["lib/helpers.js","lib/serverData.js","ReduxModules/appReducer.tsx","lib/reduceHelpers.js","Components/Layout/AppLayout.tsx","Components/Row/RowView.tsx","Components/Row/RowContainer.tsx","Components/Pages/MainPage/MainPageView.tsx","Components/Pages/MainPage/MainPageContainer.tsx","Components/Pages/TeamPage/TeamPageView.tsx","Components/Pages/TeamPage/TeamPageContainer.tsx","appRouter.tsx","ReduxModules/index.ts","store.ts","index.tsx"],"names":["toUrlString","str","toLowerCase","split","join","getData","_id","a","fetch","method","mode","cache","console","log","name","headers","body","JSON","stringify","url","urlName","sessionStr","sendClick","teamId","SET_ACTIVE_TEAM","initialState","loading","error","teams","mapTeamsById","activeTeamId","undefined","activeTeam","sessionString","newTeam","finished","fetchAllData","dispatch","fetchAllDataBegin","server","then","data","json","jsonData","fetchAllDataSuccess","catch","fetchAllDataFailure","type","payload","base","reduce","acumul","currentValue","setActiveRow","id","teamObj","fetchCreateTeam","fetchCreateTeamBegin","fetchCreateTeamSuccess","fetchCreateTeamFailure","getTeamByUrlName","fetchSingleTeamBegin","fetchSingleTeamSuccess","fetchSingleTeamFailure","window","location","socket","io","connect","state","ownProps","rootReducer","app_reducer","updateTeamByIdDisp","updateTeamById","props","classes","useStyles","useEffect","on","className","appWrap","Typography","component","topLine","Container","maxWidth","children","makeStyles","theme","createStyles","width","minHeight","backgroundColor","color","fontWeight","textAlign","mainContainer","TableRowView","React","useState","position","groupName","groupClicks","active","groupId","handleClickActivate","StyledTableRow","key","onClick","style","StyledTableCell","align","root","palette","background","paper","nested","paddingLeft","spacing","withStyles","TableRow","head","common","white","padding","fontSize","TableCell","action","setActiveRowDisp","getTeamByUrlDisp","setActive","groupUrlName","RowView","totalClicks","sessionClicks","TableView","handleClick","inputName","showAlert","Grid","container","quoteGrid","justify","alignItems","item","quotedText","signatureText","listWrap","xs","btnItem","variant","OutlinedInput","placeholder","inputRef","input","inputField","Button","fullWidth","btnRoot","containedPrimary","btnPrimary","label","btnLabel","severity","Table","table","aria-label","TableHead","TableBody","Object","keys","length","map","index","group","paddingRight","border","borderRadius","height","paddingBottom","Alert","elevation","getAllData","createNewTeamDisp","history","useHistory","setShowAlert","useRef","push","MainPageView","current","value","activeTeamName","useRouteMatch","punchLine","urlLineContainer","urlLine","href","wholeUrl","counterContainer","bigBlueText","marginBottom","marginTop","marginLeft","createSessionDisp","Date","getTime","toString","Math","random","match","params","team","newData","TeamPageView","AppRouter","exact","path","MainPageContainer","TeamPageContainer","combineReducers","activeTotal","clicks","logger","store","next","info","result","getState","groupEnd","reducerCombined","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23c03f87.chunk.js","sourcesContent":["export function toUrlString(str) {\n  return str.toLowerCase().split(\" \").join(\"-\");\n}\n","import { toUrlString } from \"./helpers.js\";\nconst CHAMELEON_API = `/api/v1/chameleon`;\n\n//**********************************************************************************************************************\n// GET ALL TEAMS DATA\n//**********************************************************************************************************************\n\nexport async function getData(_id) {\n  const a = await fetch(\"/api/data\", {\n    method: \"GET\",\n    mode: \"cors\",\n    cache: \"default\",\n  });\n  console.log(\"got all data \", a);\n  return a;\n}\n\n//**********************************************************************************************************************\n// GET ALL TEAMS DATA\n//**********************************************************************************************************************\n\nexport async function createNewTeam(name) {\n  const a = await fetch(`/api/newTeam`, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"default\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      url: toUrlString(name),\n      name: name,\n    }),\n  });\n  console.log(\"create a new team \", a);\n  return a;\n}\n\n//**********************************************************************************************************************\n// GET SINGLE TEAM DATA\n//**********************************************************************************************************************\n\nexport async function fetchTeamByUrl(urlName, sessionStr) {\n  const a = await fetch(`/api/singleTeam/${urlName}`, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"default\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      sessionStr: sessionStr,\n    }),\n  });\n  return a;\n}\n\n//**********************************************************************************************************************\n// SEND CLICK\n//**********************************************************************************************************************\n\nexport async function sendClick(teamId, sessionStr) {\n  const a = await fetch(`/api/klik`, {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"default\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      teamId: teamId,\n      sessionStr: sessionStr,\n    }),\n  });\n  return a;\n}\n","import * as server from \"../lib/serverData\";\nimport * as reduceHelpers from \"../lib/reduceHelpers\";\nimport Team from \"../Types/Team\";\n\n// Action types\nconst FETCH_ALL_DATA_BEGIN = \"my-app/project/FETCH_ALL_DATA_BEGIN\";\nconst FETCH_ALL_DATA_SUCCESS = \"my-app/project/FETCH_ALL_DATA_SUCCESS\";\nconst FETCH_ALL_DATA_FAILURE = \"my-app/project/FETCH_ALL_DATA_FAILURE\";\n\nconst CREATE_NEW_TEAM_BEGIN = \"my-app/project/CREATE_NEW_TEAM_BEGIN\";\nconst CREATE_NEW_TEAM_SUCCESS = \"my-app/project/CREATE_NEW_TEAM_SUCCESS\";\nconst CREATE_NEW_TEAM_FAILURE = \"my-app/project/CREATE_NEW_TEAM_FAILURE\";\n\nconst FETCH_SINGLE_TEAM_BEGIN = \"my-app/project/FETCH_SINGLE_TEAM_BEGIN\";\nconst FETCH_SINGLE_TEAM_SUCCESS = \"my-app/project/FETCH_SINGLE_TEAM_SUCCESS\";\nconst FETCH_SINGLE_TEAM_FAILURE = \"my-app/project/FETCH_SINGLE_TEAM_FAILURE\";\n\nconst SET_ACTIVE_TEAM = \"my-app/project/SET_ACTIVE_TEAM\";\n\nconst NEW_SESSION_STRING = \"my-app/project/NEW_SESSION_STRING\";\n\nconst UPD_ACTUAL_TEAM_CLICKS = \"my-app/project/UPD_ACTUAL_TEAM_CLICKS\";\n\nconst UPD_ACTUAL_TEAM_TOTAL_CLICKS =\n  \"my-app/project/UPD_ACTUAL_TEAM_TOTAL_CLICKS\";\n\nconst UPDATE_TEAM_CLICKS = \"my-app/project/UPDATE_TEAM_CLICKS\";\n\ntype MapType = { [key: string]: any };\n\ninterface InitStateI {\n  loading: boolean;\n  error: any;\n  teams: any; //delete\n  mapTeamsById: { [key: string]: any };\n  activeTeamId: any; // delete\n  activeTeam: any;\n  sessionString: string;\n  newTeam: {\n    loading: boolean;\n    error: any;\n    finished: boolean;\n  };\n}\n\nconst initialState: InitStateI = {\n  loading: false,\n  error: null,\n  teams: [], //delete\n  mapTeamsById: {},\n  activeTeamId: undefined, // delete\n  activeTeam: {},\n  sessionString: \"\",\n  newTeam: {\n    loading: false,\n    error: null,\n    finished: false,\n  },\n};\n\n// Reducer\nexport default function reducer(state = initialState, action: any) {\n  switch (action.type) {\n    //FETCHING ALL DATA\n    case FETCH_ALL_DATA_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null,\n        teams: [],\n      };\n\n    case FETCH_ALL_DATA_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        teams: action.payload.teams,\n        mapTeamsById: action.payload.mapTeamsById,\n      };\n\n    case FETCH_ALL_DATA_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        teams: [],\n      };\n\n    //SINGLE ACTION UDPATED\n\n    case SET_ACTIVE_TEAM:\n      console.log(\"Activating Team: \", action.payload.teamObj);\n      return {\n        ...state,\n        activeTeamId: action.payload.id,\n        activeTeam: action.payload.teamObj,\n      };\n\n    case UPD_ACTUAL_TEAM_CLICKS:\n      return {\n        ...state,\n        activeTeam: {\n          ...state.activeTeam,\n          totalClicks: action.payload.totalClicks,\n          sessionClicks: action.payload.sessionClicks,\n        },\n      };\n\n    case UPD_ACTUAL_TEAM_TOTAL_CLICKS: /// here\n      return {\n        ...state,\n        activeTeam: {\n          ...state.activeTeam,\n          totalClicks: action.payload.totalClicks,\n        },\n      };\n\n    case UPDATE_TEAM_CLICKS:\n      let activeTotal = state.activeTeam.totalClicks\n        ? state.activeTeam.totalClicks\n        : 0;\n      let sessionClicks = state.activeTeam.sessionClicks\n        ? state.activeTeam.sessionClicks\n        : 0;\n      // if anyone else has active team the same as clicked, update his total Clicks\n      if (state.activeTeam._id === action.payload.teamObj.teamId) {\n        activeTotal = action.payload.teamObj.totalClicks;\n      }\n\n      // if click was caused by me and my sessionString, add to my clicks (sessionClicks)\n      if (state.sessionString === action.payload.teamObj.sessionString) {\n        sessionClicks = action.payload.teamObj.clicks;\n      }\n      return {\n        ...state,\n        activeTeam: {\n          ...state.activeTeam,\n          totalClicks: activeTotal,\n          sessionClicks: sessionClicks,\n        },\n        mapTeamsById: {\n          ...state.mapTeamsById,\n          [action.payload.teamObj.teamId]: {\n            ...state.mapTeamsById[action.payload.teamObj.teamId],\n            totalClicks: action.payload.teamObj.totalClicks, //action.payload.teamObj,\n          },\n        },\n      };\n\n    case NEW_SESSION_STRING:\n      return {\n        ...state,\n        sessionString: action.payload.str,\n      };\n\n    //CREATING NEW TEAM\n    case CREATE_NEW_TEAM_BEGIN:\n      return {\n        ...state,\n        newTeam: {\n          ...state.newTeam,\n          loading: true,\n        },\n      };\n\n    case CREATE_NEW_TEAM_SUCCESS:\n      return {\n        ...state,\n        newTeam: {\n          ...state.newTeam,\n          loading: false,\n          finished: true,\n        },\n      };\n\n    case CREATE_NEW_TEAM_FAILURE:\n      return {\n        ...state,\n        newTeam: {\n          ...state.newTeam,\n          loading: false,\n          error: [\"Fail while creating new Team\"],\n        },\n      };\n\n    case FETCH_SINGLE_TEAM_BEGIN:\n      return {\n        ...state,\n        activeTeam: {\n          ...state.activeTeam,\n          loading: true,\n        },\n      };\n\n    case FETCH_SINGLE_TEAM_SUCCESS:\n      console.log(\"Fetched one team: \", action.payload);\n\n      return {\n        ...state,\n        activeTeam: {\n          ...state.activeTeam,\n          loading: false,\n        },\n      };\n\n    case FETCH_SINGLE_TEAM_FAILURE:\n      return {\n        ...state,\n        activeTeam: {\n          ...state.activeTeam,\n          error: [\"Fail while loading this Team\"],\n        },\n      };\n    default:\n      return state;\n  }\n}\n\n// Action Creators\n\n// FETCH Candidates\nexport function fetchAllData() {\n  return (dispatch: any) => {\n    dispatch(fetchAllDataBegin());\n    return server\n      .getData()\n      .then((data) => data.json())\n      .then((jsonData) => {\n        console.log(\"Json data: \", jsonData);\n\n        //REDUCER MAP BY _ID\n        dispatch(fetchAllDataSuccess(jsonData));\n      })\n      .catch((error) => dispatch(fetchAllDataFailure(error)));\n  };\n}\n\nexport const fetchAllDataBegin = () => ({\n  type: FETCH_ALL_DATA_BEGIN,\n});\n\nexport const fetchAllDataSuccess = (teams: any) => ({\n  type: FETCH_ALL_DATA_SUCCESS,\n  payload: {\n    teams: teams,\n    mapTeamsById: reduceHelpers.mapTeamsById(teams),\n  },\n});\n\nexport const fetchAllDataFailure = (error: any) => ({\n  type: FETCH_ALL_DATA_FAILURE,\n  payload: { error },\n});\n\n//activating row team\nexport const setActiveRow = (id: any, teamObj: Team) => {\n  console.log(\"Activating team start: \", teamObj);\n  return {\n    type: SET_ACTIVE_TEAM,\n    payload: { id, teamObj },\n  };\n};\n\n// FETCH Candidates\nexport function fetchCreateTeam(name: string) {\n  return (dispatch: any) => {\n    dispatch(fetchCreateTeamBegin());\n    return server\n      .createNewTeam(name)\n      .then((data) => data.json())\n      .then((jsonData) => {\n        console.log(\"Json data: \", jsonData);\n\n        //REDUCER MAP BY _ID\n        dispatch(fetchCreateTeamSuccess());\n        dispatch(setActiveRow(jsonData._id, jsonData));\n      })\n      .catch((error) => dispatch(fetchCreateTeamFailure()));\n  };\n}\n\nexport const fetchCreateTeamBegin = () => ({\n  type: CREATE_NEW_TEAM_BEGIN,\n});\n\nexport const fetchCreateTeamSuccess = () => ({\n  type: CREATE_NEW_TEAM_SUCCESS,\n});\n\nexport const fetchCreateTeamFailure = () => ({\n  type: CREATE_NEW_TEAM_FAILURE,\n});\n\n// FETCH Candidates\nexport function getTeamByUrlName(urlName: string, sessionStr?: string) {\n  return (dispatch: any) => {\n    dispatch(fetchSingleTeamBegin());\n    return server\n      .fetchTeamByUrl(urlName, sessionStr)\n      .then((data) => data.json())\n      .then((jsonData) => {\n        console.log(\"Json data: getTeamByUrlName\", jsonData);\n\n        dispatch(fetchSingleTeamSuccess(jsonData));\n        dispatch(setActiveRow(jsonData._id, jsonData));\n      })\n      .catch((error) => dispatch(fetchSingleTeamFailure()));\n  };\n}\n\nexport const fetchSingleTeamBegin = () => ({\n  type: FETCH_SINGLE_TEAM_BEGIN,\n});\n\nexport const fetchSingleTeamSuccess = (data: Team) => ({\n  type: FETCH_SINGLE_TEAM_SUCCESS,\n});\n\nexport const fetchSingleTeamFailure = () => ({\n  type: FETCH_SINGLE_TEAM_FAILURE,\n});\n\n//Create session string\nexport const createSessionString = () => {\n  let newSessionStr = new Date().getTime().toString() + Math.random();\n  return {\n    type: NEW_SESSION_STRING,\n    payload: {\n      str: newSessionStr,\n    },\n  };\n};\n\n// //Actualisation\n// export const actualClicksOnActiveTeam = (\n//   totalClicks: number,\n//   sessionClicks: number\n// ) => {\n//   return {\n//     type: UPD_ACTUAL_TEAM_CLICKS,\n//     payload: {\n//       totalClicks: totalClicks,\n//       sessionClicks: sessionClicks,\n//     },\n//   };\n// };\n\n//update Team by Id\nexport const updateTeamById = (teamObj: any) => {\n  return {\n    type: UPDATE_TEAM_CLICKS,\n    payload: {\n      teamObj: teamObj,\n    },\n  };\n};\n\n// //update Team by Id\n\n// export const updateActiveTeamTotalClicks = (totalClicks: number) => {\n//   return {\n//     type: UPD_ACTUAL_TEAM_TOTAL_CLICKS,\n//     payload: {\n//       totalClicks: totalClicks,\n//     },\n//   };\n// };\n","export function mapTeamsById(base) {\n  if (base && typeof base == \"object\") {\n    return base.reduce((acumul, currentValue) => {\n      acumul[currentValue._id] = currentValue;\n\n      return acumul;\n    }, {});\n  } else {\n    return {};\n  }\n}\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport io from \"socket.io-client\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\";\n\nimport {\n  updateTeamById,\n  // updateActiveTeamTotalClicks,\n} from \"../../ReduxModules/appReducer\";\nimport Team from \"../../Types/Team\";\n\nlet url = \"http://localhost:4005\";\n\nif (process.env.NODE_ENV === \"development\") {\n  url = \"http://localhost:4005\";\n}\n\nif (process.env.NODE_ENV === \"production\") {\n  url = \"https://degrassi-mountie-58419.herokuapp.com/\";\n  console.log(\"Production link: \", window.location);\n}\n\nconst socket = io(url);\n\ninterface ILayoutProps {\n  activeTeam: any;\n  updateTeamByIdDisp: (teamObj: any) => void;\n  // updateActiveTeamTotDisp: (totalClicks: number) => void;\n}\n\nconst AppLayout: React.SFC<ILayoutProps> = (props) => {\n  const classes = useStyles();\n\n  const { activeTeam, updateTeamByIdDisp } = props;\n\n  useEffect(() => {\n    socket.on(\"clicked\", (body: any) => {\n      console.log(\"Something SOCKET CLICKED\", body);\n      updateTeamByIdDisp(body);\n    });\n  }, []);\n\n  return (\n    <div className={classes.appWrap}>\n      <Typography component=\"h1\" className={classes.topLine}>\n        STFUANDCLICK.COM\n      </Typography>\n      <Container maxWidth=\"sm\" className=\"mainContainer\">\n        <>{props.children}</>\n      </Container>\n    </div>\n  );\n};\n\nconst StateToProps = () => {\n  return (state: any, ownProps: any) => {\n    return {\n      activeTeam: state.rootReducer.app_reducer.activeTeam,\n    };\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => {\n  return {\n    updateTeamByIdDisp: (teamObj: any) => dispatch(updateTeamById(teamObj)),\n  };\n};\n\nexport default connect(StateToProps, mapDispatchToProps)(AppLayout);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appWrap: {\n      width: \"100%\",\n      minHeight: \"100vh\",\n      backgroundColor: \"#F1F2F3\",\n    },\n    topLine: {\n      backgroundColor: \"#5194DF\",\n      width: \"100%\",\n      color: \"white\",\n      fontWeight: 700,\n      textAlign: \"center\",\n    },\n    mainContainer: {\n      backgroundColor: \"white\",\n    },\n  })\n);\n","import React from \"react\";\nimport {\n  withStyles,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nconst TableRowView: React.SFC<TableItemProps> = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n\n  const {\n    position,\n    groupName,\n    groupClicks,\n    groupId,\n    active,\n    handleClickActivate,\n  } = props;\n\n  return (\n    <StyledTableRow\n      key={groupName}\n      onClick={handleClickActivate}\n      style={{ backgroundColor: active ? \"red\" : \"rgba(81,148,223,0.23)\" }}\n    >\n      <StyledTableCell align=\"center\" style={{ width: \"10%\" }}>\n        {position}.\n      </StyledTableCell>\n      <StyledTableCell align=\"left\">{groupName}</StyledTableCell>\n      <StyledTableCell align=\"right\">{groupClicks}</StyledTableCell>\n    </StyledTableRow>\n  );\n};\n\nexport default TableRowView;\n\ninterface TableItemProps {\n  position: number;\n  groupName: string;\n  groupClicks: number;\n  groupId: string;\n  active: boolean;\n  handleClickActivate: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n    nested: {\n      paddingLeft: theme.spacing(4),\n    },\n  })\n);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      \"&:nth-of-type(odd)\": {\n        backgroundColor: \"rgba(81,148,223,0.23)\",\n      },\n    },\n  })\n)(TableRow);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: \"transparent\",\n      color: theme.palette.common.white,\n      paddingLeft: \"0 !important\",\n      padding: 5,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\nimport { Selector, createSelector } from \"reselect\";\n\nimport RowView from \"./RowView\";\nimport { setActiveRow, getTeamByUrlName } from \"../../ReduxModules/appReducer\";\nimport { AppState } from \"../../store\";\nimport Team from \"../../Types/Team\";\nimport { MatchParams } from \"../Pages/TeamPage/TeamPageView\";\n\ninterface rowProps {\n  position: number;\n  groupName: string;\n  groupUrlName: string;\n  groupClicks: number;\n  groupId: string;\n\n  activeTeam: any;\n  sessionString: string;\n\n  setActiveRowDisp: (id: string, teamObj: Team) => void;\n  getTeamByUrlDisp: (urlName: string, sessionStr: string) => void;\n}\n\nconst RowContainer: React.FC<rowProps> = (props) => {\n  const [active, setActive] = useState<boolean>(false);\n\n  const {\n    position,\n    groupName,\n    groupUrlName,\n    groupId,\n    groupClicks,\n    sessionString,\n    activeTeam,\n\n    setActiveRowDisp,\n    getTeamByUrlDisp,\n  } = props;\n\n  useEffect(() => {\n    if (activeTeam._id == groupId) {\n      setActive(true);\n    } else {\n      setActive(false);\n    }\n  }, [activeTeam]);\n\n  const handleClickActivate = () => {\n    // setActive(!active);\n    setActiveRowDisp(groupId, {\n      name: groupName,\n      urlName: groupUrlName,\n      totalClicks: groupClicks,\n      sessionClicks: 0,\n      _id: groupId,\n    });\n    getTeamByUrlDisp(groupUrlName, sessionString);\n    // history.push(\"/\" + groupUrlName);\n  };\n\n  return (\n    <RowView\n      position={position}\n      groupName={groupName}\n      groupClicks={groupClicks}\n      groupId={groupId}\n      active={active}\n      handleClickActivate={handleClickActivate}\n    />\n  );\n};\n\ninterface LinkStateToProps {\n  activeTeam: any;\n  sessionString: string;\n}\n\nconst StateToProps = () => {\n  return (state: any, ownProps: any): LinkStateToProps => {\n    return {\n      activeTeam: state.rootReducer.app_reducer.activeTeam,\n      sessionString: state.rootReducer.app_reducer.sessionString,\n    };\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => {\n  return {\n    dispatch: (action: any) => dispatch(action),\n    setActiveRowDisp: (id: string, teamObj: Team) =>\n      dispatch(setActiveRow(id, teamObj)),\n    getTeamByUrlDisp: (urlName: string, sessionStr: string) =>\n      dispatch(getTeamByUrlName(urlName, sessionStr)),\n  };\n};\n\nexport default connect(StateToProps, mapDispatchToProps)(RowContainer);\n","import React, { useEffect } from \"react\";\nimport {\n  withStyles,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\n// import ListSubheader from \"@material-ui/core/ListSubheader\";\n// import List from \"@material-ui/core/List\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MuiAlert, { AlertProps } from \"@material-ui/lab/Alert\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\n\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport RowContainer from \"../../Row/RowContainer\";\nimport Team from \"../../../Types/Team\";\n\ninterface TableViewProps {\n  teams: [Team];\n  mapTeamsById: any;\n  handleClick: () => void;\n  inputName: any;\n  showAlert: boolean;\n}\n\nconst TableView: React.SFC<TableViewProps> = (props) => {\n  const classes = useStyles();\n  const { teams, mapTeamsById, handleClick, inputName, showAlert } = props;\n\n  return (\n    <>\n      <Grid\n        container\n        className={classes.quoteGrid}\n        justify=\"center\"\n        alignItems=\"center\"\n      >\n        <Grid item>\n          <Typography component=\"p\" className={classes.quotedText}>\n            'Its really simple, you just need to click as fast as you can'\n          </Typography>\n          <Typography component=\"p\" className={classes.signatureText}>\n            - anonymous\n          </Typography>\n        </Grid>\n      </Grid>\n      <div className={classes.listWrap}>\n        <Grid container alignItems=\"stretch\">\n          <Grid item xs={6} className={classes.btnItem}>\n            <Typography variant=\"subtitle1\" component=\"p\">\n              Enter your team name:\n            </Typography>\n            <OutlinedInput\n              // className={classes.input}\n              placeholder=\"Your mom\"\n              inputRef={inputName}\n              classes={{\n                input: classes.inputField,\n              }}\n              // inputProps={{ 'aria-label': 'id no.', className: classes.inputField }}\n              // disabled={disabled}\n              // onChange={onChange}\n            />\n          </Grid>\n          <Grid item xs={6} className={classes.btnItem}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              color=\"primary\"\n              classes={{\n                root: classes.btnRoot,\n                containedPrimary: classes.btnPrimary,\n                label: classes.btnLabel,\n              }}\n              onClick={handleClick}\n            >\n              Click\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container justify=\"center\">\n          <Grid item>\n            {!showAlert ? null : (\n              <Alert severity=\"error\">You must fill up name first!</Alert>\n            )}\n          </Grid>\n        </Grid>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell\n                align=\"right\"\n                style={{ width: \"10%\" }}\n              ></StyledTableCell>\n              <StyledTableCell align=\"left\">TEAM</StyledTableCell>\n              <StyledTableCell align=\"right\">CLICKS</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mapTeamsById &&\n              Object.keys(mapTeamsById).length != 0 &&\n              Object.keys(mapTeamsById).map((teamId, index) => {\n                let group = mapTeamsById[teamId];\n\n                return (\n                  <RowContainer\n                    key={teamId}\n                    position={index}\n                    groupName={group.name}\n                    groupUrlName={group.urlName}\n                    groupClicks={group.totalClicks}\n                    groupId={group._id}\n                  />\n                );\n              })}\n          </TableBody>\n        </Table>\n      </div>\n    </>\n  );\n};\n\nexport default TableView;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    quoteGrid: {\n      minHeight: \"6rem\",\n    },\n    quotedText: {\n      textAlign: \"center\",\n    },\n    signatureText: {\n      textAlign: \"right\",\n      paddingRight: 60,\n    },\n    listWrap: {\n      width: \"100%\",\n      // maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n      border: \"3px solid #5194DF\",\n      borderRadius: 5,\n    },\n\n    table: {\n      width: \"100%\",\n    },\n    inputField: {\n      padding: 6,\n      fontSize: 14,\n    },\n    btnRoot: {\n      height: \"100%\",\n    },\n    btnPrimary: {\n      backgroundColor: \"#5194DF\",\n    },\n    btnLabel: {\n      fontWeight: 800,\n      fontSize: \"1.5rem\",\n    },\n    btnItem: {\n      padding: 10,\n      paddingBottom: 0,\n    },\n  })\n);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: \"transparent\",\n      color: \"grey\",\n      fontWeight: 700,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n\nfunction Alert(props: AlertProps) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n","import * as React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  fetchAllData,\n  fetchCreateTeam,\n} from \"../../../ReduxModules/appReducer\";\nimport * as server from \"../../../lib/serverData\";\n\nimport MainPageView from \"./MainPageView\";\nimport Team from \"../../../Types/Team\";\n\nconst ListContainer: React.SFC<IAppProps> = (props) => {\n  let history = useHistory();\n  const [showAlert, setShowAlert] = useState<boolean>(false);\n  const inputName = useRef<HTMLInputElement>(null);\n\n  const {\n    teams,\n    activeTeam,\n    mapTeamsById,\n    getAllData,\n    createNewTeamDisp,\n  } = props;\n\n  useEffect(() => {\n    console.log(\"UseEff appState: \", teams);\n    getAllData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"UseEff appState: \", teams);\n    if (activeTeam && activeTeam.urlName) {\n      history.push(`/${activeTeam.urlName}`);\n    }\n  }, [activeTeam]);\n\n  const handleClick = () => {\n    if (null != inputName.current && inputName.current.value != \"\") {\n      setShowAlert(false);\n      console.log(\"inputName: \", inputName.current.value);\n      createNewTeamDisp(inputName.current.value);\n    } else {\n      setShowAlert(true);\n    }\n  };\n\n  return (\n    <MainPageView\n      teams={teams}\n      mapTeamsById={mapTeamsById}\n      handleClick={handleClick}\n      inputName={inputName}\n      showAlert={showAlert}\n    />\n  );\n};\n\nconst StateToProps = () => {\n  return (state: any, ownProps: any) => {\n    console.log(\"State to propsss: \", state);\n    return {\n      teams: state.rootReducer.app_reducer.teams,\n      activeTeam: state.rootReducer.app_reducer.activeTeam,\n      mapTeamsById: state.rootReducer.app_reducer.mapTeamsById,\n    };\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => {\n  return {\n    dispatch: (action: any) => dispatch(action),\n    getAllData: () => dispatch(fetchAllData()),\n    createNewTeamDisp: (name: string) => dispatch(fetchCreateTeam(name)),\n  };\n};\n\nexport default connect(StateToProps, mapDispatchToProps)(ListContainer);\n\ninterface IAppProps {\n  teams: any;\n  activeTeam: Team;\n  mapTeamsById: any;\n  getAllData: () => void;\n  createNewTeamDisp: (name: string) => void;\n}\n","import React, { useEffect, useRef } from \"react\";\nimport {\n  withStyles,\n  makeStyles,\n  Theme,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\nimport List from \"@material-ui/core/List\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport RowContainer from \"../../Row/RowContainer\";\nimport Team from \"../../../Types/Team\";\n\nexport interface MatchParams {\n  team: string;\n}\n\ninterface TableViewProps {\n  teams: [Team];\n  activeTeamName: string;\n  activeTeam: any;\n  mapTeamsById: any;\n  handleClick: () => void;\n}\n\nconst TableView: React.SFC<TableViewProps> = (props) => {\n  const classes = useStyles();\n  let match = useRouteMatch<MatchParams>();\n\n  const {\n    teams,\n    activeTeamName,\n    activeTeam,\n    mapTeamsById,\n    handleClick,\n  } = props;\n\n  return (\n    <>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        className={classes.punchLine}\n      >\n        <Grid item>\n          <Typography variant=\"h4\" align=\"center\">\n            Clicking for team <b>{activeTeamName}</b>\n          </Typography>\n        </Grid>\n      </Grid>\n\n      <Grid container className={classes.urlLineContainer}>\n        <Grid item xs={8}>\n          <Grid container justify=\"center\">\n            <Grid item>\n              <Typography variant=\"subtitle1\" className={classes.urlLine}>\n                Too lazy to click? Let your pals click for you:\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={4}>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <OutlinedInput\n                placeholder=\"Your mom\"\n                value={window.location.href}\n                className={classes.wholeUrl}\n                classes={{\n                  input: classes.inputField,\n                }}\n              />\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <div className={classes.listWrap}>\n        <Grid container alignItems=\"stretch\">\n          <Grid item xs={12} className={classes.btnItem}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              color=\"primary\"\n              classes={{\n                root: classes.btnRoot,\n                containedPrimary: classes.btnPrimary,\n                label: classes.btnLabel,\n              }}\n              onClick={handleClick}\n            >\n              Click\n            </Button>\n          </Grid>\n        </Grid>\n        <Grid container className={classes.counterContainer}>\n          <Grid item xs={6}>\n            <Typography align=\"center\">Your Clicks:</Typography>\n            <Typography align=\"center\" className={classes.bigBlueText}>\n              {activeTeam.sessionClicks}\n            </Typography>\n          </Grid>\n          <Grid item xs={6}>\n            <Typography align=\"center\">Team Clicks:</Typography>\n            <Typography align=\"center\" className={classes.bigBlueText}>\n              {activeTeam.totalClicks}\n            </Typography>\n          </Grid>\n        </Grid>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell\n                align=\"right\"\n                style={{ width: \"10%\" }}\n              ></StyledTableCell>\n              <StyledTableCell align=\"left\">TEAM</StyledTableCell>\n              <StyledTableCell align=\"right\">CLICKS</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {mapTeamsById &&\n              Object.keys(mapTeamsById).length != 0 &&\n              Object.keys(mapTeamsById).map((teamId, index) => {\n                let group = mapTeamsById[teamId];\n                return (\n                  <RowContainer\n                    key={teamId}\n                    position={index}\n                    groupName={group.name}\n                    groupUrlName={group.urlName}\n                    groupClicks={group.totalClicks}\n                    groupId={group._id}\n                  />\n                );\n              })}\n          </TableBody>\n        </Table>\n      </div>\n    </>\n  );\n};\n\nexport default TableView;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    punchLine: {\n      minHeight: \"6rem\",\n    },\n    urlLineContainer: {\n      marginBottom: 15,\n    },\n    urlLine: {\n      width: \"100%\",\n    },\n    listWrap: {\n      width: \"100%\",\n      backgroundColor: theme.palette.background.paper,\n      border: \"3px solid #5194DF\",\n      borderRadius: 5,\n    },\n    counterContainer: {\n      marginTop: 20,\n      marginBottom: 20,\n    },\n    bigBlueText: {\n      fontSize: 30,\n      fontWeight: 700,\n      color: \"#5194DF\",\n    },\n    table: {\n      width: \"100%\",\n    },\n    wholeUrl: {\n      marginLeft: 5,\n    },\n    inputField: {\n      padding: 6,\n      fontSize: 14,\n      backgroundColor: \"white\",\n    },\n    btnRoot: {\n      height: \"100%\",\n    },\n    btnPrimary: {\n      backgroundColor: \"#5194DF\",\n    },\n    btnLabel: {\n      fontWeight: 800,\n      fontSize: \"1.5rem\",\n    },\n    btnItem: {\n      padding: 10,\n      paddingBottom: 0,\n    },\n  })\n);\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n  createStyles({\n    head: {\n      backgroundColor: \"transparent\",\n      color: \"grey\",\n      fontWeight: 700,\n    },\n    body: {\n      fontSize: 14,\n    },\n  })\n)(TableCell);\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createSelector } from \"reselect\";\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\n\nimport {\n  fetchAllData,\n  getTeamByUrlName,\n  createSessionString,\n  // actualClicksOnActiveTeam,\n} from \"../../../ReduxModules/appReducer\";\n\nimport { sendClick } from \"../../../lib/serverData\";\n\nimport TeamPageView, { MatchParams } from \"./TeamPageView\";\nimport Team from \"../../../Types/Team\";\n\nconst ListContainer: React.SFC<IAppProps> = (props) => {\n  let match = useRouteMatch<MatchParams>();\n  let history = useHistory();\n  const {\n    teams,\n    activeTeam,\n    sessionString,\n    mapTeamsById,\n    getAllData,\n    getTeamByUrlDisp,\n    createSessionDisp,\n    // actualClicksDisp,\n    // sendClickDisp,\n  } = props;\n\n  useEffect(() => {\n    getAllData();\n    createSessionDisp();\n  }, []);\n\n  useEffect(() => {\n    if (match.params.team && activeTeam.urlName != match.params.team) {\n      getTeamByUrlDisp(match.params.team);\n    }\n  }, [match]);\n\n  useEffect(() => {\n    console.log(\"activeTeam:  : \", activeTeam, activeTeam.name);\n    if (activeTeam.urlName && match.params.team != activeTeam.urlName) {\n      history.push(`/${activeTeam.urlName}`);\n    }\n  }, [activeTeam]);\n\n  const handleClick = async () => {\n    const newData = await sendClick(activeTeam._id, sessionString);\n    const jsonData = await newData.json();\n    // actualClicksDisp(jsonData.totalClicks, jsonData.clicks);\n  };\n\n  return (\n    <TeamPageView\n      teams={teams}\n      activeTeamName={activeTeam.name}\n      activeTeam={activeTeam}\n      mapTeamsById={mapTeamsById}\n      handleClick={handleClick}\n    />\n  );\n};\n\n// const makeGetConfADMemb = () => createSelector(\n//   (state, props) => state.group_state.confirmedGroupMembers[props.group_name],\n//   (confADMemb) => {\n//     return confADMemb\n//   }\n// )\n\nconst StateToProps = () => {\n  // const getADMmbs = makeGetConfADMemb()\n  return (state: any, ownProps: any) => {\n    console.log(\"State to propsss: \", state);\n    return {\n      // confirmedADMemb: getADMmbs(state, ownProps),\n      teams: state.rootReducer.app_reducer.teams,\n      activeTeam: state.rootReducer.app_reducer.activeTeam,\n      sessionString: state.rootReducer.app_reducer.sessionString,\n      mapTeamsById: state.rootReducer.app_reducer.mapTeamsById,\n    };\n  };\n};\n\nconst mapDispatchToProps = (dispatch: any, ownProps: any) => {\n  console.log(\"Team Dis to Props ownProps: \", ownProps);\n\n  return {\n    dispatch: (action: any) => dispatch(action),\n    getAllData: () => dispatch(fetchAllData()),\n    getTeamByUrlDisp: (urlName: string) => dispatch(getTeamByUrlName(urlName)),\n    createSessionDisp: () => dispatch(createSessionString()),\n  };\n};\n\nexport default connect(StateToProps, mapDispatchToProps)(ListContainer);\n\ninterface IAppProps {\n  teams: any;\n  activeTeam: Team;\n  sessionString: string;\n  mapTeamsById: any;\n  getAllData: () => void;\n  getTeamByUrlDisp: (urlName: string) => void;\n  createSessionDisp: () => void;\n}\n","import * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport {\n  Switch,\n  Route,\n  NavLink,\n  Redirect,\n  useHistory,\n  BrowserRouter as Router,\n} from \"react-router-dom\";\n\nimport * as server from \"./lib/serverData\";\n\nimport AppLayout from \"./Components/Layout/AppLayout\";\nimport MainPageContainer from \"./Components/Pages/MainPage/MainPageContainer\";\nimport TeamPageContainer from \"./Components/Pages/TeamPage/TeamPageContainer\";\n\nconst AppRouter: React.SFC<IAppProps> = (props) => {\n  console.log(\"App Router location: \", props);\n\n  useEffect(() => {\n    server.getData();\n  }, []);\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <AppLayout {...props}>\n            <MainPageContainer />\n          </AppLayout>\n        </Route>\n        <Route exact path=\"/:team\">\n          <AppLayout {...props}>\n            <TeamPageContainer />\n          </AppLayout>\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n\ninterface IAppProps {}\n","import { combineReducers } from \"redux\";\nimport appReducer from \"./appReducer\";\n\nconst rootReducer = combineReducers({\n  app_reducer: appReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport rootReducer from \"./ReduxModules\";\nimport * as thunk from \"redux-thunk\";\n\nconst logger = (store: any) => (next: any) => (action: any) => {\n  console.group(action.type);\n  console.info(\"dispatching\", action);\n  let result = next(action);\n  console.log(\"next state\", store.getState());\n  console.groupEnd();\n  return result;\n};\n\nexport const reducerCombined = combineReducers({\n  rootReducer: rootReducer,\n});\n\nexport type AppState = ReturnType<typeof reducerCombined>;\n\nexport const createAppStore = () =>\n  createStore(reducerCombined, applyMiddleware(thunk.default, logger));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport AppRouter from \"./appRouter\";\nimport { createAppStore } from \"./store\";\n\nlet store = createAppStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <AppRouter />\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}